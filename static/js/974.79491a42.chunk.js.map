{"version":3,"file":"static/js/974.79491a42.chunk.js","mappings":"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","sources":["components/BlurOverlay.jsx","components/Loaders.jsx","components/ContactForm.jsx","redux/selectors.js","components/Filter.jsx","components/ContactItem.jsx","components/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { BlurDiv } from './styled';\n\nexport const BlurOverlay = () => {\n  const [isLoaded, setisLoaded] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setisLoaded(true);\n    }, 500);\n  }, []);\n\n  return !isLoaded && <BlurDiv />;\n};\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const ButtonDeleteLoader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"rgb(87, 88, 134)\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"24\"\n      visible={true}\n    />\n  );\n};\n\nexport const ButtonAddLoader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"rgb(87, 88, 134)\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"24\"\n      visible={true}\n    />\n  );\n};\n\nexport const ContactsLoader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"rgb(87, 88, 134)\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"66\"\n      visible={true}\n    />\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Form, Label, Input, Button } from './styled';\nimport { useAddContactMutation } from 'redux/contactsApi';\nimport { toast } from 'react-hot-toast';\nimport { ButtonAddLoader } from './Loaders';\n\nexport const ContactForm = () => {\n  const [isNameFocused, setIsNameFocused] = useState(false);\n  const [isNumberFocused, setIsNumberFocused] = useState(false);\n\n  const [name, setName] = useState(\n    JSON.parse(window.localStorage.getItem('NAME')) ?? ''\n  );\n  const [number, setNumber] = useState(\n    JSON.parse(window.localStorage.getItem('NUMBER')) ?? ''\n  );\n\n  const [addContact, { isLoading, isSuccess, isError, error }] =\n    useAddContactMutation();\n\n  useEffect(() => {\n    window.localStorage.setItem('NAME', JSON.stringify(name));\n  }, [name]);\n\n  useEffect(() => {\n    window.localStorage.setItem('NUMBER', JSON.stringify(number));\n  }, [number]);\n\n  useEffect(() => {\n    isSuccess && toast.success('Successfully added!');\n    isError && toast.error(`Wasn't added!. Status: ${error.status}`);\n  }, [error, isError, isSuccess]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form\n      style={{ marginTop: '30px' }}\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      <Label\n        htmlFor={'name'}\n        style={{ color: isNameFocused && 'rgb(87, 88, 134)' }}\n      >\n        Name\n      </Label>\n      <Input\n        style={{ marginBottom: '20px' }}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n        onFocus={() => setIsNameFocused(true)}\n        onBlur={() => setIsNameFocused(false)}\n        id={'name'}\n        title=\"min 3, max 40 symbols\"\n        pattern=\"^.{3,40}$\"\n        required\n      />\n      <Label\n        htmlFor={'number'}\n        style={{ color: isNumberFocused && 'rgb(87, 88, 134)' }}\n      >\n        Number\n      </Label>\n      <Input\n        style={{ marginBottom: '20px' }}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={e => setNumber(e.target.value)}\n        onFocus={() => setIsNumberFocused(true)}\n        onBlur={() => setIsNumberFocused(false)}\n        id={'number'}\n        title=\"Only figures and spaces, min 6, max 20 symbols\"\n        pattern=\"[0-9\\s]{6,20}\"\n        required\n      />\n      <Button\n        style={{ marginBottom: '40px' }}\n        type=\"submit\"\n        disabled={isLoading || !name || !number}\n      >\n        {!isLoading ? 'Add contact' : <ButtonAddLoader />}\n      </Button>\n    </Form>\n  );\n};\n","export const getFilter = state => state.filter;\n","import { Form, Input, Label } from './styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport { useEffect, useState } from 'react';\n\nexport const Filter = () => {\n  const [isFilterFocused, setIsFilterFocused] = useState(false);\n\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(filter);\n\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      dispatch(setFilter(inputValue));\n    }, 500);\n\n    return () => {\n      clearTimeout(debounce);\n    };\n  }, [dispatch, inputValue]);\n\n  return (\n    <Form style={{ marginBottom: '20px' }}>\n      <Label\n        htmlFor={'filterInput'}\n        style={{\n          fontSize: 16,\n          fontWeight: 400,\n          color: isFilterFocused && 'rgb(87, 88, 134)',\n        }}\n      >\n        Find contacts by name\n      </Label>\n      <Input\n        autoComplete=\"off\"\n        type=\"text\"\n        id={'filterInput'}\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n        onFocus={() => setIsFilterFocused(true)}\n        onBlur={() => setIsFilterFocused(false)}\n      />\n    </Form>\n  );\n};\n","import PropTypes from 'prop-types';\nimport {\n  ContactItemWrap,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n  DeleteIcon,\n} from './styled';\nimport { useDeleteContactMutation } from 'redux/contactsApi';\nimport { ButtonDeleteLoader } from './Loaders';\nimport { toast } from 'react-hot-toast';\nimport { useEffect } from 'react';\n\nexport const ContactItem = ({ contact }) => {\n  const [deleteContact, { isLoading, isSuccess, isError, error }] =\n    useDeleteContactMutation();\n\n  useEffect(() => {\n    isSuccess && toast.success('Successfully deleted!');\n    isError && toast.error(`Wasn't deleted. Status: ${error.status}`);\n  }, [error, isError, isSuccess]);\n\n  return (\n    <ContactItemWrap>\n      <ContactName>{contact.name}: </ContactName>\n      <ContactNumber>{contact.number}</ContactNumber>\n      <DeleteButton\n        disabled={isLoading}\n        type=\"button\"\n        id={contact.id}\n        onClick={() => deleteContact(contact.id)}\n      >\n        {!isLoading ? <DeleteIcon /> : <ButtonDeleteLoader />}\n      </DeleteButton>\n    </ContactItemWrap>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import toast from 'react-hot-toast';\n\nimport { useGetContactsQuery } from 'redux/contactsApi';\nimport { ContactItem } from './ContactItem';\nimport { ContactListWrap } from './styled';\n\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { ContactsLoader } from './Loaders';\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const { data, isLoading, error, isError } = useGetContactsQuery();\n\n  useEffect(() => {\n    isError && toast.error(`Wasn't loaded. Status: ${error.status}`);\n  }, [error, isError]);\n\n  const visibleContacts = data?.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  return isLoading ? (\n    <ContactsLoader />\n  ) : (\n    visibleContacts.length !== 0 && (\n      <ContactListWrap>\n        {visibleContacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </ContactListWrap>\n    )\n  );\n};\n","import { Toaster } from 'react-hot-toast';\n\nimport { ContactForm } from '../components/ContactForm';\nimport { Filter } from '../components/Filter';\nimport { ContactList } from '../components/ContactList';\nimport { BlurOverlay } from '../components/BlurOverlay';\n\nimport { Section } from '../components/styled';\n\nconst ContactPage = () => {\n  return (\n    <>\n      <BlurOverlay />\n      <Section>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Section>\n      <Toaster />\n    </>\n  );\n};\n\nexport default ContactPage;\n"],"names":["BlurOverlay","useState","isLoaded","setisLoaded","useEffect","setTimeout","ButtonDeleteLoader","strokeColor","strokeWidth","animationDuration","width","visible","ButtonAddLoader","ContactsLoader","ContactForm","isNameFocused","setIsNameFocused","isNumberFocused","setIsNumberFocused","JSON","parse","window","localStorage","getItem","name","setName","number","setNumber","useAddContactMutation","addContact","isLoading","isSuccess","isError","error","setItem","stringify","toast","status","style","marginTop","onSubmit","e","preventDefault","autoComplete","htmlFor","color","marginBottom","type","value","onChange","target","onFocus","onBlur","id","title","pattern","required","disabled","getFilter","state","filter","Filter","isFilterFocused","setIsFilterFocused","useSelector","dispatch","useDispatch","inputValue","setInputValue","debounce","setFilter","clearTimeout","fontSize","fontWeight","ContactItem","contact","useDeleteContactMutation","deleteContact","onClick","ContactList","useGetContactsQuery","data","visibleContacts","toLowerCase","includes","length","map","B"],"sourceRoot":""}