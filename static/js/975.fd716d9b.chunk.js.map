{"version":3,"file":"static/js/975.fd716d9b.chunk.js","mappings":"kNAGaA,EAAc,WACzB,OAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,YAAW,WACTF,GAAY,EACb,GAAE,IACJ,GAAE,KAEKD,IAAY,SAAC,KAAD,GACrB,C,yHCVYI,EAAe,WAC1B,OAA0CL,EAAAA,EAAAA,WAAS,GAAnD,eAAOM,EAAP,KAAsBC,EAAtB,KACA,GAA4CP,EAAAA,EAAAA,WAAS,GAArD,eAAOQ,EAAP,KAAuBC,EAAvB,KACA,GAAkDT,EAAAA,EAAAA,WAAS,GAA3D,eAAOU,EAAP,KAA0BC,EAA1B,KAEA,GAAwBX,EAAAA,EAAAA,UAAS,IAAjC,eAAOY,EAAP,KAAaC,EAAb,KACA,GAA0Bb,EAAAA,EAAAA,UAAS,IAAnC,eAAOc,EAAP,KAAcC,EAAd,KACA,GAAgCf,EAAAA,EAAAA,UAAS,IAAzC,eAAOgB,EAAP,KAAiBC,EAAjB,KAMA,OACE,UAAC,KAAD,CACEC,MAAO,CAAEC,UAAW,QACpBC,SAPiB,SAAAC,GACnBA,EAAEC,gBACH,EAMGC,aAAa,MAHf,WAKE,SAAC,KAAD,CACEC,QAAS,OACTN,MAAO,CAAEO,MAAOnB,GAAiB,oBAFnC,mBAMA,SAAC,KAAD,CACEY,MAAO,CAAEQ,aAAc,QACvBC,KAAK,OACLf,KAAK,OACLgB,MAAOhB,EACPiB,SAAU,SAAAR,GAAC,OAAIR,EAAQQ,EAAES,OAAOF,MAArB,EACXG,QAAS,kBAAMxB,GAAiB,EAAvB,EACTyB,OAAQ,kBAAMzB,GAAiB,EAAvB,EACR0B,GAAI,OACJC,MAAM,8BACNC,QAAQ,mBACRC,UAAQ,KAEV,SAAC,KAAD,CACEZ,QAAS,QACTN,MAAO,CAAEO,MAAOjB,GAAkB,oBAFpC,6BAMA,SAAC,KAAD,CACEU,MAAO,CAAEQ,aAAc,QACvBC,KAAK,QACLf,KAAK,QACLgB,MAAOd,EACPe,SAAU,SAAAR,GAAC,OAAIN,EAASM,EAAES,OAAOF,MAAtB,EACXG,QAAS,kBAAMtB,GAAkB,EAAxB,EACTuB,OAAQ,kBAAMvB,GAAkB,EAAxB,EACRwB,GAAI,QACJG,UAAQ,KAEV,SAAC,KAAD,CACEZ,QAAS,WACTN,MAAO,CAAEO,MAAOf,GAAqB,oBAFvC,uBAMA,SAAC,KAAD,CACEQ,MAAO,CAAEQ,aAAc,QACvBC,KAAK,MACLf,KAAK,WACLgB,MAAOZ,EACPa,SAAU,SAAAR,GAAC,OAAIJ,EAAYI,EAAES,OAAOF,MAAzB,EACXG,QAAS,kBAAMpB,GAAqB,EAA3B,EACTqB,OAAQ,kBAAMrB,GAAqB,EAA3B,EACRsB,GAAI,WACJC,MAAM,yCACNC,QAAQ,sBACRC,UAAQ,KAEV,SAAC,KAAD,CACElB,MAAO,CAAEQ,aAAc,QACvBC,KAAK,SACLU,UAAWzB,IAASE,IAAUE,EAHhC,uBASL,ECrED,EAZqB,WACnB,OACE,iCACE,SAACjB,EAAAuC,EAAD,KACA,UAAC,KAAD,YACE,SAACjC,EAAD,KACA,SAAC,KAAD,CAAYkC,GAAG,SAAf,mDAIP,C","sources":["components/BlurOverlay.jsx","components/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { BlurDiv } from './styled';\n\nexport const BlurOverlay = () => {\n  const [isLoaded, setisLoaded] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setisLoaded(true);\n    }, 500);\n  }, []);\n\n  return !isLoaded && <BlurDiv />;\n};\n","import { useState } from 'react';\nimport { Form, Label, Input, Button } from './styled';\n\nexport const RegisterForm = () => {\n  const [isNameFocused, setIsNameFocused] = useState(false);\n  const [isEmailFocused, setIsEmailFocused] = useState(false);\n  const [isPasswordFocused, setIsPasswordFocused] = useState(false);\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <Form\n      style={{ marginTop: '60px' }}\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      <Label\n        htmlFor={'name'}\n        style={{ color: isNameFocused && 'rgb(87, 88, 134)' }}\n      >\n        Name\n      </Label>\n      <Input\n        style={{ marginBottom: '20px' }}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n        onFocus={() => setIsNameFocused(true)}\n        onBlur={() => setIsNameFocused(false)}\n        id={'name'}\n        title=\"Min 6, max 20 latin letters\"\n        pattern=\"^[a-zA-Z]{6,20}$\"\n        required\n      />\n      <Label\n        htmlFor={'email'}\n        style={{ color: isEmailFocused && 'rgb(87, 88, 134)' }}\n      >\n        E-mail Address\n      </Label>\n      <Input\n        style={{ marginBottom: '20px' }}\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        onFocus={() => setIsEmailFocused(true)}\n        onBlur={() => setIsEmailFocused(false)}\n        id={'email'}\n        required\n      />\n      <Label\n        htmlFor={'password'}\n        style={{ color: isPasswordFocused && 'rgb(87, 88, 134)' }}\n      >\n        Password\n      </Label>\n      <Input\n        style={{ marginBottom: '20px' }}\n        type=\"tel\"\n        name=\"password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n        onFocus={() => setIsPasswordFocused(true)}\n        onBlur={() => setIsPasswordFocused(false)}\n        id={'password'}\n        title=\"Min 6, max 20 latin letters or figures\"\n        pattern=\"^[a-zA-Z0-9]{6,20}$\"\n        required\n      />\n      <Button\n        style={{ marginBottom: '20px' }}\n        type=\"submit\"\n        disabled={!name || !email || !password}\n      >\n        Sing Up\n      </Button>\n    </Form>\n  );\n};\n","import { BlurOverlay } from '../components/BlurOverlay';\n\nimport { LinkStyled, Section } from '../components/styled';\nimport { RegisterForm } from 'components/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <BlurOverlay />\n      <Section>\n        <RegisterForm />\n        <LinkStyled to=\"/login\">Already have an account? Sign in</LinkStyled>\n      </Section>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["BlurOverlay","useState","isLoaded","setisLoaded","useEffect","setTimeout","RegisterForm","isNameFocused","setIsNameFocused","isEmailFocused","setIsEmailFocused","isPasswordFocused","setIsPasswordFocused","name","setName","email","setEmail","password","setPassword","style","marginTop","onSubmit","e","preventDefault","autoComplete","htmlFor","color","marginBottom","type","value","onChange","target","onFocus","onBlur","id","title","pattern","required","disabled","B","to"],"sourceRoot":""}